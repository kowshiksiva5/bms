services:
  webapp:
    image: bms-webapp:latest
    build:
      context: .
      dockerfile: webapp/Dockerfile
    container_name: bms-webapp
    restart: unless-stopped
    env_file: .env
    environment:
      TZ: Asia/Kolkata
    volumes:
      - /var/lib/bms/artifacts:/app/artifacts
    ports:
      - "8000:8000"

  bot:
    image: ${IMAGE_NAME:-bms-rev1}:${IMAGE_TAG:-latest}
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bms-bot
    restart: unless-stopped
    env_file: .env
    environment:
      TZ: Asia/Kolkata
      BMS_FORCE_UC: "1"
      LOG_LEVEL: "INFO"
    volumes:
      - /var/lib/bms/artifacts:/app/artifacts
    shm_size: "1g"
    command: python -m bot.bot

  # duplicate this service per monitor (one worker == one monitor)
  worker-sample:
    image: ${IMAGE_NAME:-bms-rev1}:${IMAGE_TAG:-latest}
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bms-worker-sample
    restart: unless-stopped
    env_file: .env
    environment:
      TZ: Asia/Kolkata
      BMS_FORCE_UC: "1"
      LOG_LEVEL: "INFO"
    volumes:
      - /var/lib/bms/artifacts:/app/artifacts
    shm_size: "1g"
    # replace MONITOR_ID after you create it via /new in Telegram
    command: >
      python -m worker
      --monitor-id MONITOR_ID
      --monitor
      --trace
      --artifacts-dir ./artifacts
